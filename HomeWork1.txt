JSON

 1. Создать внешний репозиторий c названием JSON:

 Repositories —> New

 2. Клонировать репозиторий JSON на локальный компьютер: 

 cd QA/Git —> git clone https://github.com/VikaStruk/JSON.git

 3. Внутри локального JSON создать файл “new.json”: 

 touch new.json

 4. Добавить файл под гит: 

 git add . or git add new.json

 5. Закоммитить файл:

 git commit -m "add file new.json"

 6. Отправить файл на внешний GitHub репозиторий: 

 git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: 

 {
  "full_name": "Vika Struk",
  "age": 24,
  "how_many_homepets": 1,
  "future_salary, USD": 1000
     }

 8. Отправить изменения на внешний репозиторий: 

 git commit -am "edit file new.json" —> git push

 9. Создать файл preferences.json: 

 touch preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON:

 {
   "favorite":
  {
   "film": "V for Vendetta",
   "tv_series": "Dont have",
   "food": "Sushi",
   "season": "Summer",
   "country": "America"
   }
     }

 11. Создать файл sklls.json добавить информацию о скилах которые будут изучены на курсе в формате JSON: 

 touch skills.json  —>  —-> vim skills.json

 {
  "skills":
    [
      "JSON", 
      "XML", 
      "API", 
      "Postman", 
      "Fidler", 
      "Dev Tools", 
      "XCode", 
      "SQL", 
      "Git", 
      "Jmeter", 
      "Scrum"
        ]
  }

 12. Отправить сразу 2 файла на внешний репозиторий:

 git add .  —>  git commit -am "add two files preferencesw.json, skills.json"  —>  git push

 13. На веб интерфейсе создать файл bug_report.json.

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе:  

 add file —> create new file

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON: 

{
    "id": 1,
    "tytle": "Incorrect block order “What we do?” and “How about now” on the page Х",
    "steps_to_reproduce":
		[
		   "Open web site www.XXXXXXXX",
		   "Go to page"
		   ],
    "actual_results": "First page block is What we do and second page block is How about now",
    "expected_results": "First page block is How about now and second page block is What we do",
    "severity": "Major"
    }

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 17. Синхронизировать внешний и локальный репозиторий JSON:

 git fetch —> git pull 


XML

 1. Создать внешний репозиторий c названием XML:

 Repositories —> New

 2. Клонировать репозиторий XML на локальный компьютер:

 git clone https://github.com/VikaStruk/XML.git

 3. Внутри локального XML создать файл “new.xml”:

 touch new.xml

 4. Добавить файл под гит:

 git add . 

 5. Закоммитить файл: 

 git commit -m "add file new.xml"

 6. Отправить файл на внешний GitHub репозиторий:

 git push

 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML: 
      
 <xml>

<full_name>Vika</full_name>

<age>24</age>

<how_many_homepets>Dont have</how_many_homepets>

<future_salary_USD>1000</future_salary_USD>

</xml>

 8. Отправить изменения на внешний репозиторий:

 git commit -am "edit file new.xml" —> git push

 9. Создать файл preferences.xml: 
 
preferences.xml

10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML: 

touch preferences.xml

       <xml>

<favorite>

 <film>V for Vendetta</film>

 <tv_series>Dont have</tv_series>

 <food>Sushi</food>

 <season>Summer</season>

</favorite>

</xml>

 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML:

 touch skills.xml

       <xml>

<skills>JSON, XML, API, Postman, Fidler, Dev Tools, XCode, SQL, Git, Jmeter, Scrum</skills> 

</xml>

 12. Сделать коммит в одну строку: 

 git add .  —>  git commit -m "create files preferences.xml and skills.xml" 

 13. Отправить сразу 2 файла на внешний репозиторий: 
 
git push

 14. На веб интерфейсе создать файл bug_report.xml: 
 
add file —> create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 

 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML:

<xml>
 <id>1</id>
 <tytle>Incorrect block order “What we do?” and “How about now” on the page Х</tytle>
 <steps_to_reproduce>Open web site www.XXXXXXXX", "Go to page X</steps_to_reproduce>
 <actual_results>First page block is What we do and second page block is How about now</actual_results>
 <expected_results>First page block is How about now and second page block is What we do</expected_results>
 <severity>Major</severity>
</xml>

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 

 18. Синхронизировать внешний и локальный репозиторий XML:

 Git fetch —> git pull

TXT

 1. Создать внешний репозиторий c названием TXT: 
 
Repositories —> New

 2. Клонировать репозиторий TXT на локальный компьютер:

 git clone https://github.com/VikaStruk/TXT.git

 3. Внутри локального TXT создать файл “new.txt”:

 cd txt —> touch new.txt

 4. Добавить файл под гит: 
 
git add .

 5. Закоммитить файл:

 git commit -m "create file new.txt"

 6. Отправить файл на внешний GitHub репозиторий:

 git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

 8. Отправить изменения на внешний репозиторий:

 git commit -am "edit new.txt" —>  git push

 9. Создать файл preferences.txt: 
 
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT. 

 12. Сделать коммит в одну строку:

 git commit -am "create preferences.txt and skills.txt"

 13. Отправить сразу 2 файла на внешний репозиторий:

 git push 

 14. На веб интерфейсе создать файл bug_report.txt:

 add file —> create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

 18. Синхронизировать внешний и локальный репозиторий TXT:

 git pull
